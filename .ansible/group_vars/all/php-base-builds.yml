---
###################################################################################################
# Docker: php-base (docker stage: help)
###################################################################################################

#
# This file holds definition for all nntoan/docker-php:x.y-z images
#

# The following specifies the order in which modules are being built.
default_extensions:
  - bcmath
  - bz2
  - calendar
  - exif
  - gd
  - gettext
  - intl
  - mysqli
  - mcrypt
  - pcntl
  - pdo_mysql
  - soap
  - sockets
  - sysvmsg
  - sysvsem
  - sysvshm
  - redis
  - opcache
  - xsl
  - zip
  - sodium

extensions_enabled:
  - bcmath
  - blackfire
  - bz2
  - calendar
  - exif
  - gd
  - geoip
  - gettext
  - gmp
  - gnupg
  - igbinary
  - imagick
  - imap
  - intl
  - ldap
  - mailparse
  - mcrypt
  - msgpack
  - mysqli
  - oauth
  - opcache
  - pcntl
  - pcov
  - pdo_mysql
  - propro
  - pspell
  - raphf
  - recode
  - redis
  - shmop
  - soap
  - sockets
  - zookeeper
  - sodium
  - ssh2
  - sysvmsg
  - sysvsem
  - sysvshm
  - tidy
  - xdebug
  - xmlrpc
  - xsl
  - yaml
  - zip
  - ioncube

extensions_available:
  bcmath:
    disabled: []
    all:
      type: builtin
  blackfire:
    disabled: []
    all:
      type: custom
      command: |
        ARCH="$(dpkg-architecture --query DEB_HOST_GNU_CPU)" \
        && version=$(php -r "echo PHP_MAJOR_VERSION.PHP_MINOR_VERSION;") \
        && curl -A "Docker" -o /tmp/blackfire-probe.tar.gz -D - -L -s https://blackfire.io/api/v1/releases/probe/php/linux/${ARCH}/$version \
        && mkdir -p /tmp/blackfire \
        && tar zxpf /tmp/blackfire-probe.tar.gz -C /tmp/blackfire \
        && mv /tmp/blackfire/blackfire-*.so $(php -r "echo ini_get('extension_dir');")/blackfire.so \
        && rm -rf /tmp/blackfire /tmp/blackfire-probe.tar.gz \
      build_dep: [gnupg2, ca-certificates, lsb-release, software-properties-common]
  bz2:
    disabled: []
    all:
      type: builtin
      build_dep: [libbz2-dev]
  calendar:
    disabled: []
    all:
      type: builtin
  exif:
    disabled: []
    all:
      type: builtin
  gd:
    disabled: []
    all:
      type: builtin
      configure: --with-freetype=/usr/include/ --with-jpeg=/usr/include/
      build_dep: [libjpeg62-turbo-dev, libpng-dev, libfreetype6-dev]
    8.3:
      type: builtin
      configure: --with-freetype=/usr/include/ --with-jpeg=/usr/include/
      build_dep: [libjpeg62-turbo-dev, libpng-dev, libfreetype6-dev]
    8.2:
      type: builtin
      configure: --with-freetype=/usr/include/ --with-jpeg=/usr/include/
      build_dep: [libjpeg62-turbo-dev, libpng-dev, libfreetype6-dev]
    8.1:
      type: builtin
      configure: --with-freetype=/usr/include/ --with-jpeg=/usr/include/
      build_dep: [libjpeg62-turbo-dev, libpng-dev, libfreetype6-dev]
    8.0:
      type: builtin
      configure: --with-freetype=/usr/include/ --with-jpeg=/usr/include/
      build_dep: [libjpeg62-turbo-dev, libpng-dev, libfreetype6-dev]
    7.4:
      type: builtin
      configure: --with-freetype=/usr/include/ --with-jpeg=/usr/include/
      build_dep: [libjpeg62-turbo-dev, libpng-dev, libfreetype6-dev]
    7.3:
      type: builtin
      configure: --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
      build_dep: [libjpeg62-turbo-dev, libpng-dev, libfreetype6-dev]
    7.2:
      type: builtin
      configure: --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/
      build_dep: [libjpeg62-turbo-dev, libpng-dev, libfreetype6-dev]
  geoip:
    disabled: [8.0, 8.1, 8.2, 8.3]
    all:
      type: pecl
      build_dep: [libgeoip-dev, wget]
  gettext:
    disabled: []
    all:
      type: builtin
  gmp:
    disabled: []
    all:
      type: builtin
      build_dep: [libgmp-dev]
  gnupg:
    disabled: []
    all:
      type: pecl
      build_dep: [libgpgme11-dev]
  igbinary:
    disabled: [8.0, 8.1, 8.2, 8.3]
    all:
      type: pecl
  imagick:
    disabled: [8.0, 8.1, 8.2, 8.3]
    all:
      type: pecl
      build_dep: [libmagickwand-dev, libmagickcore-dev]
  imap:
    disabled: [7.4, 8.0, 8.1, 8.2, 8.3]
    all:
      type: builtin
      configure: --with-kerberos --with-imap-ssl
      build_dep: [libc-client-dev, libkrb5-dev]
  intl:
    disabled: []
    all:
      type: builtin
      build_dep: [libicu-dev]
  ldap:
    disabled: []
    all:
      type: custom
      command: |
        if [ $(uname -m) = "x86_64" ]; then ldap_arch="x86_64-linux-gnu"; else ldap_arch="aarch64-linux-gnu"; fi \
        && docker-php-ext-configure ldap --with-libdir=lib/${ldap_arch} \
      build_dep: [libldap2-dev]
  mailparse:
    disabled: []
    all:
      type: pecl
    7.2:
      type: pecl
      version: 3.1.3
  mcrypt:
    disabled: [7.2, 7.3, 7.4, 8.0, 8.1, 8.2, 8.3]
    all:
      type: builtin
      build_dep: [libmcrypt-dev]
  msgpack:
    disabled: []
    all:
      type: pecl
  mysqli:
    disabled: []
    all:
      type: builtin
  oauth:
    disabled: []
    all:
      type: pecl
    8.3:
      type: pecl
      build_dep: [libpcre3-dev]
    8.2:
      type: pecl
      build_dep: [libpcre3-dev]
    8.1:
      type: pecl
      build_dep: [libpcre3-dev]
    8.0:
      type: pecl
      build_dep: [libpcre3-dev]
  opcache:
    disabled: []
    all:
      type: builtin
      flags: --enable-opcache
  pcntl:
    disabled: []
    all:
      type: builtin
  pcov:
    disabled: []
    all:
      type: pecl
  pdo_mysql:
    disabled: []
    all:
      type: builtin
  propro:
    disabled: [8.0, 8.1, 8.2, 8.3]
    all:
      type: pecl
  pspell:
    disabled: []
    all:
      type: builtin
      build_dep: [libpspell-dev]
  raphf:
    disabled: []
    all:
      type: pecl
  recode:
    disabled: [7.4, 8.0, 8.1, 8.2, 8.3]
    all:
      type: builtin
      build_dep: [librecode0, librecode-dev]
  redis:
    disabled: []
    all:
      type: pecl
  shmop:
    disabled: []
    all:
      type: builtin
  soap:
    disabled: []
    all:
      type: builtin
  sockets:
    disabled: []
    all:
      type: builtin
  zookeeper:
    disabled: [8.3]
    all:
      type: custom
      command: |
        mkdir -p /tmp/zoo \
        && cd /tmp/zoo \
        && git clone https://github.com/php-zookeeper/php-zookeeper.git \
        && curl -LO https://archive.apache.org/dist/zookeeper/zookeeper-3.4.14/zookeeper-3.4.14.tar.gz \
        && tar -xf zookeeper-3.4.14.tar.gz \
        && cp zookeeper-3.4.14/zookeeper-client/zookeeper-client-c/generated/zookeeper.jute.h zookeeper-3.4.14/zookeeper-client/zookeeper-client-c/include \
        && cd zookeeper-3.4.14/zookeeper-client/zookeeper-client-c \
        && ./configure \
        && sed -i 's/CFLAGS = -g -O2 -D_GNU_SOURCE/CFLAGS = -g -O2 -D_GNU_SOURCE -Wno-error=format-overflow -Wno-error=stringop-truncation/g' Makefile \
        && make \
        && make install \
        && ldconfig \
        && cd /tmp/zoo/php-zookeeper \
        && phpize \
        && ./configure --with-libzookeeper-dir=../zookeeper-3.4.14/zookeeper-client/zookeeper-client-c \
        && make \
        && make install \
  sodium:
    disabled: []
    all:
      type: custom
      command: |
        rm -f /usr/local/etc/php/conf.d/*sodium.ini \
        && rm -f /usr/local/lib/php/extensions/*/*sodium.so \
        && apt-get remove libsodium* -y \
        && mkdir -p /tmp/libsodium \
        && curl -sL https://github.com/jedisct1/libsodium/archive/1.0.18-RELEASE.tar.gz | tar xzf - -C  /tmp/libsodium \
        && cd /tmp/libsodium/libsodium-1.0.18-RELEASE/ \
        && ./configure \
        && make && make check \
        && make install \
        && cd / \
        && rm -rf /tmp/libsodium \
        && pecl install -o -f libsodium \
    7.1:
      type: custom
      command: |
        mkdir -p /tmp/libsodium \
        && curl -sL https://github.com/jedisct1/libsodium/archive/1.0.18-RELEASE.tar.gz | tar xzf - -C  /tmp/libsodium \
        && cd /tmp/libsodium/libsodium-1.0.18-RELEASE/ \
        && ./configure \
        && make && make check \
        && make install \
        && cd / \
        && rm -rf /tmp/libsodium \
        pecl install -o -f libsodium \
  ssh2:
    disabled: [7.3, 7.4, 8.0, 8.1, 8.2, 8.3]
    all:
      type: pecl
      version: 1.1.2
      build_dep: [libssh2-1-dev, libssh2-1]
  sysvmsg:
    disabled: []
    all:
      type: builtin
  sysvsem:
    disabled: []
    all:
      type: builtin
  sysvshm:
    disabled: []
    all:
      type: builtin
  tidy:
    disabled: []
    all:
      type: builtin
      build_dep: [libtidy-dev]
  xdebug:
    disabled: []
    all:
      type: pecl
    8.3:
      type: pecl
      version: 3.3.0
    8.2:
      type: pecl
      version: 3.2.0
    8.1:
      type: pecl
      version: 3.1.2
    8.0:
      type: pecl
      version: 3.1.2
    7.4:
      type: pecl
      version: 3.1.2
    7.3:
      type: pecl
      version: 3.1.2
    7.2:
      type: pecl
      version: 3.1.2
  xmlrpc:
    disabled: []
    all:
      type: builtin
    8.3:
      type: pecl
      version: 1.0.0RC3
    8.2:
      type: pecl
      version: 1.0.0RC3
    8.1:
      type: pecl
      version: 1.0.0RC3
    8.0:
      type: pecl
      version: 1.0.0RC3
  xsl:
    disabled: []
    all:
      type: builtin
      build_dep: [libxslt1-dev]
  yaml:
    disabled: []
    all:
      type: pecl
      build_dep: [libyaml-dev]
    7.0:
      type: pecl
      version: 2.1.0
  zip:
    disabled: []
    all:
      type: builtin
      build_dep: [libzip-dev, zip]
    7.2:
      type: builtin
      configure: --with-libzip
  ioncube:
    disabled: [8.0, 8.2, 8.3]
    all:
      type: custom
      command: |
        EXTENSION_DIR="$( php -i | grep ^extension_dir | awk -F '=>' '{print $2}' | xargs )" \
        && if [ ! -d "${EXTENSION_DIR}" ]; then mkdir -p "${EXTENSION_DIR}"; fi \
        && curl -sS --fail -k https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_$(dpkg-architecture --query DEB_HOST_GNU_CPU | sed 's/_/-/g').tar.gz -L -o ioncube.tar.gz \
        && tar xvfz ioncube.tar.gz \
        && cd ioncube \
        && cp "ioncube_loader_lin_{{ php_version }}.so" "${EXTENSION_DIR}/ioncube.so" \
        && cd ../ \
        && rm -rf ioncube \
        && rm -rf ioncube.tar.gz \
